function [dayset, matching] = my_daysets(name)
switch name
    case 'c14m4'
        directory = '../c14m4';
        dayset(1) = struct('directory', directory,...
            'day', 'c14m4d15',...
            'label', 'd15, ego left');
        dayset(2) = struct('directory', directory,...
            'day', 'c14m4d16',...
            'label', 'd16, ego left to allo south');
        dayset(3) = struct('directory', directory,...
            'day', 'c14m4d17',...
            'label', 'd17, allo south');
        matching = find_match(fullfile(directory, 'match.mat'));
        return;
    case 'c11m1'
        directory = '../c11m1';
        dayset(1) = struct('directory', directory,...
            'day', 'c11m1d12',...
            'label', 'd12, ego right');
        dayset(2) = struct('directory', directory,...
            'day', 'c11m1d13',...
            'label', 'd13, ego right to allo north');
        dayset(3) = struct('directory', directory,...
            'day', 'c11m1d14',...
            'label', 'd14, allo north');
        matching = find_match(fullfile(directory, 'match12-14_fix.mat'));
        return;
    case 'openfield'
        directory = '../open_field';
        dayset(1) = struct('directory', directory,...
            'day', 'c11m2d24', 'label', 'open field');
        dayset(2) = struct('directory', directory,...
            'day', 'c11m1d25', 'label', 'open field');
        matching = [];
    otherwise
        error('day set %s not found', name);
end
end

%TODO: add neuron match indices as another field in dayset
function matching = find_match(matchfile)
s = load(matchfile);
matching = find_full_match(s.match_list);
end