function com_dist_vs_corr(org)
ncd_r = cell2mat(org.fetch('nc_by_dist_r')');
r_h = serrorbar(0:19, mean(ncd_r), sem(ncd_r).*1.96, 'lineprops', {'-', 'Color', [0 0.5 0]});
hold on;
ncd_l = cell2mat(org.fetch('nc_by_dist_l')');
l_h = serrorbar(0:19, mean(ncd_l), sem(ncd_l).*1.96, 'lineprops', {'-', 'Color', [0.8 0.5 0]});

l_ = refline(0,0); l_.Color = 'k';
xlabel 'RFs peak distance'
ylabel 'Pairwise noise correlations'
legend([r_h.mainLine l_h.mainLine], 'Running right', 'Running left');
legend boxoff

figure_format([1.3 1.3]);
set(gca, 'XTick', [0 10 20]);
set(gca, 'XTickLabel', {'0', 'L/2', 'L'});


avg_nc_mean = mean(cell2mat(org.fetch('avg_nc')));
avg_nc_sem = sem(cell2mat(org.fetch('avg_nc')));
fprintf('Total mean noise correlations, with mean+-sem over 110 sessions: %f +- %f\n', avg_nc_mean, avg_nc_sem);

zero_nc_length_r = cellfun(@(x)locate_negative(x,20), org.fetch('nc_by_dist_r'));
zero_nc_length_l = cellfun(@(x)locate_negative(x,20), org.fetch('nc_by_dist_l'));
zero_nc_length = (zero_nc_length_r + zero_nc_length_l) / 2;
message_nc = 'generated by com_dist_vs_corr.m under @Org';
save zero_nc_length.mat zero_nc_length message_nc
%%
hq_mice = unique(org.sess_prop.Mouse(org.default_filt(true)));
f_ = org.default_filt(true);
for m_i = 1:numel(hq_mice)
    permouse_nc_dist_r = org.mouse_by_bins('nc_by_dist_r', {hq_mice{m_i}, 'restrict'});
    permouse_nc_dist_l = org.mouse_by_bins('nc_by_dist_l', {hq_mice{m_i}, 'restrict'});
    mean_nc_dist = (permouse_nc_dist_l + permouse_nc_dist_r) ./ 2;
    permouse_corr_len(m_i) = locate_negative(mean_nc_dist, 20);
    %[permouse_avg_nc(m_i), permouse_avg_nc_sem(m_i)] = org.mouse_by_bins('avg_nc', {hq_mice{m_i}, 'restrict'});
    %[permouse_sig_dens(m_i), permouse_sig_dens_sem(m_i)] = org.mouse_med_bins('signal_density', {hq_mice{m_i}, 'restrict'});
    [permouse_abs_avg_nc(m_i), permouse_abs_avg_nc_sem(m_i)] = msem(org.per_sess('abs_avg_nc', {hq_mice{m_i}, 'restrict'}));
    [permouse_sig_dens(m_i), permouse_sig_dens_sem(m_i)] = msem(org.per_sess('signal_density', {hq_mice{m_i}, 'restrict'}));
    %[permouse_asymp_rat(m_i), permouse_asymp_rat_sem(m_i)] = msem(org.per_sess('asymp_ratio', {hq_mice{m_i}, 'restrict'}));
    %[permouse_I0N(m_i), permouse_I0N_sem(m_i)] = msem(org.per_sess('I0N', {hq_mice{m_i}, 'restrict'}));
    [permouse_asymp_rat(m_i), permouse_asymp_rat_sem(m_i)] = msem(org.sess_prop.asymp_ratio(strcmp(org.sess_prop.Mouse, hq_mice{m_i}) & f_' & org.sess_prop.asymp_ratio < 1));
    [permouse_I0N(m_i), permouse_I0N_sem(m_i)] = msem(org.sess_prop.I0N(strcmp(org.sess_prop.Mouse, hq_mice{m_i}) & f_'));
end

figure;
subplot(3,2,1);
PanelGenerator.plot_regress(permouse_corr_len, permouse_sig_dens, permouse_corr_len.*0, permouse_sig_dens_sem.*1.96,...
    hq_mice, 'k');
xlabel 'Noise corr. length';
ylabel 'Signal density';
axis square;
report_corrs(permouse_corr_len, permouse_sig_dens, 'corr_len', 'signal_density');

subplot(3,2,2);
PanelGenerator.plot_regress(permouse_abs_avg_nc, permouse_sig_dens, permouse_abs_avg_nc_sem.*1.96, permouse_sig_dens_sem.*1.96,...
    hq_mice, 'k');
xlabel 'Abs. Avg. noise corr.';
ylabel 'Signal density';
axis square;
report_corrs(permouse_abs_avg_nc, permouse_sig_dens, 'abs_avg_nc', 'signal_density');

subplot(3,2,3);
PanelGenerator.plot_regress(permouse_corr_len, permouse_asymp_rat, permouse_corr_len.*0, permouse_asymp_rat_sem.*1.96,...
    hq_mice, 'k');
xlabel 'Noise corr. length';
ylabel 'Asymp. ratio';
axis square;
report_corrs(permouse_corr_len, permouse_asymp_rat, 'corr_len', 'asymp_ratio');

subplot(3,2,4);
PanelGenerator.plot_regress(permouse_abs_avg_nc, permouse_asymp_rat, permouse_abs_avg_nc_sem.*1.96, permouse_asymp_rat_sem.*1.96,...
    hq_mice, 'k');
xlabel 'Abs. Avg. noise corr.';
ylabel 'Asymp. ratio';
axis square;
report_corrs(permouse_abs_avg_nc, permouse_asymp_rat, 'abs_avg_nc', 'asymp_ratio');

subplot(3,2,5);
PanelGenerator.plot_regress(permouse_corr_len, permouse_I0N, permouse_corr_len.*0, permouse_I0N_sem.*1.96,...
    hq_mice, 'k');
xlabel 'Noise corr. length';
ylabel 'I0N';
axis square;
report_corrs(permouse_corr_len, permouse_I0N, 'corr_len', 'I0N');

subplot(3,2,6);
PanelGenerator.plot_regress(permouse_abs_avg_nc, permouse_I0N, permouse_abs_avg_nc_sem.*1.96, permouse_I0N_sem.*1.96,...
    hq_mice, 'k');
xlabel 'Abs. Avg. noise corr.';
ylabel 'I0N';
axis square;
report_corrs(permouse_abs_avg_nc, permouse_I0N, 'abs_avg_nc', 'I0N');
%%
return;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
agg = @(x) cell2mat(Utils.cf_(@get_pairs, o.fetch(x)'));

total_noise_corr_right = agg('noise_corr_avg_right');
total_noise_corr_left = agg('noise_corr_avg_left');

total_sig_corr_right = agg('sig_corr_right');
total_sig_corr_left = agg('sig_corr_left');

total_corr_right = agg('tot_corr_right');
total_corr_left = agg('tot_corr_left');

total_com_dist_right = agg('com_dist_right');
total_com_dist_left = agg('com_dist_left');

total_mode_dist_right = agg('mode_dist_right');
total_mode_dist_left = agg('mode_dist_left');

bin_params = {0,10,40};

figure;
subplot(3,2,1);
[d,c,cs] = show_vars(total_com_dist_right, total_noise_corr_right,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'COM dist. right (bins)'
ylabel 'Noise corr. right'

subplot(3,2,2);
[d,c,cs] = show_vars(total_com_dist_left, total_noise_corr_left,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'COM dist. left (bins)'
ylabel 'Noise corr. left'

subplot(3,2,3);
[d,c,cs] = show_vars(total_com_dist_right, total_sig_corr_right,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'COM dist. right (bins)'
ylabel 'Signal corr. right'

subplot(3,2,4);
[d,c,cs] = show_vars(total_com_dist_left, total_sig_corr_left,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'COM dist. left (bins)'
ylabel 'Signal corr. left'

subplot(3,2,5);
[d,c,cs] = show_vars(total_com_dist_right, total_corr_right,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'COM dist. right (bins)'
ylabel 'Total corr. right'

subplot(3,2,6);
[d,c,cs] = show_vars(total_com_dist_left, total_corr_left,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'COM dist. left (bins)'
ylabel 'Total corr. left'

suptitle('All sessions, using COM distance');



bin_params = {0,20,20};
figure;
subplot(3,2,1);
[d,c,cs] = show_vars(total_mode_dist_right, total_noise_corr_right,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'Peak dist. right (bins)'
ylabel 'Noise corr. right'

subplot(3,2,2);
[d,c,cs] = show_vars(total_mode_dist_left, total_noise_corr_left,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'Peak dist. left (bins)'
ylabel 'Noise corr. left'

subplot(3,2,3);
[d,c,cs] = show_vars(total_mode_dist_right, total_sig_corr_right,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'Peak dist. right (bins)'
ylabel 'Signal corr. right'

subplot(3,2,4);
[d,c,cs] = show_vars(total_mode_dist_left, total_sig_corr_left,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'Peak dist. left (bins)'
ylabel 'Signal corr. left'

subplot(3,2,5);
[d,c,cs] = show_vars(total_mode_dist_right, total_corr_right,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'Peak dist. right (bins)'
ylabel 'Total corr. right'

subplot(3,2,6);
[d,c,cs] = show_vars(total_mode_dist_left, total_corr_left,...
    bin_params{:});
serrorbar(d,c,cs);
l_ = refline(0,0); l_.Color = 'k';
xlabel 'Peak dist. left (bins)'
ylabel 'Total corr. left'


suptitle('All sessions, using peak (mode) distance');
end


function [edge_mids, mean_vals, sems] = show_vars(X, Y, low, high, count)
    %[~, edges] = histcounts(X);
    edges = linspace(low, high, count + 1);
    [mean_vals, sems] = avg_bins(X,Y,edges);
    edge_mids = (edges(1:end-1) + edges(2:end))/2;
end


function [mean_vals, sems] = avg_bins(X, Y, Xbins)
[X, ord] = sort(X);
Y = Y(ord);
max_X = max(X);

n_bins = numel(Xbins)-1;
[mean_vals, sems] = deal(zeros(1,n_bins));

for i = 1:n_bins
    bin_start = Xbins(i);
    bin_end = Xbins(i+1);
    
    ind_start = find(X >= bin_start, 1);
    assert(~isempty(ind_start), 'could not find start');
    if bin_end >= max_X
        ind_end = numel(X);
    else
        ind_end = find(X > bin_end, 1) - 1;
        assert(~isempty(ind_end), 'could not find end');
    end
    
    selection = Y(ind_start:ind_end);
    mean_vals(i) = mean(selection);
    sems(i) = sem(selection);
end
end

function ind = locate_negative(x, not_found_val)
    ind = find(x<0,1)-1;
    if isempty(ind)
        ind = not_found_val;
    end
end

function [m_, s_] = msem(x)
    m_ = mean(x);
    s_ = sem(x);
end

function report_corrs(v1_agg, v2_agg, var1, var2)
[p,pp,s,sp,k,kp,adjr2] = Org.corr_check(v1_agg, v2_agg);
fprintf('Mouse-aggregated correlations %s vs. %s: adj. R^2 = %.3f\n', var1, var2, adjr2);
fprintf('Pearson: %.3f, p = %e, %s\n', p, pp, Utils.pstar(pp));
fprintf('Spearman: %.3f, p = %e, %s\n', s, sp, Utils.pstar(sp));
fprintf('Kendall: %.3f, p = %e, %s\n', k, kp, Utils.pstar(kp));
end