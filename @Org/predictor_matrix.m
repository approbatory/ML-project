function [mat, sem, varnames, mat_agg, sem_agg] = predictor_matrix(o)

varnames = {'cos_area', 'corr_cos_area',...
    'cos2_area', 'corr_cos2_area',...
    'cos_area_per_neuron', 'corr_cos_area_per_neuron',...
    'cos2_area_per_neuron', 'corr_cos2_area_per_neuron',...
    'num_neurons', 'num_trials', ...
    'signal_density', 'sigdens_log', 'ipr_log',...
    'cos2_ratio', 'corr_cos2_ratio', 'dmu_ipr',...
    'noise_ipr', 'noise_density', 'noise_perplexity_density'...
    'eigen_noise_ipr', 'eigen_noise_density',...
    'avg_signal', 'total_signal', 'signal_perplexity_density',...
    'diag_decoder_density', 'snr_density', 'corr_cos2_area_10', 'cos2_area_10',...
    'corr_cos2_area_10_shuf', 'cos2_area_10_shuf',...
    'cos2_area_20', 'cos2_area_20_shuf',...
    'cos2_area_5', 'cos2_area_5_shuf',...
    'cos2_area_1', 'cos2_area_2', 'cos2_area_3', 'cos2_area_4',...
    'cos2_area_6', 'cos2_area_7', 'cos2_area_8', 'cos2_area_9',...
    'weighted_overlap', 'harmonic_delta_loadings_ipr', 'loadings_ipr', 'corr_loadings_ipr'...
    'loadings_ipr_shuf', 'signal_var', 'signal_log_var',...
    'signal_var_norm', 'signal_log_var_norm', 'log_of_signal_var',...
    'exp_negative_sigma2', 'inv_signal_var', 'N10', 'corr_cos4_area', 'cos4_area',...
    'corr_cos2_area_abs', 'cos2_area_abs', 'hd_efn', 'fixed_pss', 'hd_svn', 'fixed_nsv', 'hd_nsv_fixed', 'hd_pss_fixed', 'overlap_metric', 'var_fwhm_cm'};

for d = [1:40, 83]
    varnames{end+1} = sprintf('delta_cos2_area_%d',d);
end
for d = [1:40, 83]
    varnames{end+1} = sprintf('corr_delta_cos2_area_%d',d);
end

[mat, sem] = deal(zeros(o.total_sessions, numel(varnames)));

for j = 1:numel(varnames)
    [mat(:,j), sem(:,j)] = o.per_sess(varnames{j});
end


uniq_mice = unique(o.mouse);
n = numel(uniq_mice);

[mat_agg, sem_agg] = deal(zeros(n, numel(varnames)));
for i = 1:n
    m = uniq_mice{i};
    filt = strcmp(o.mouse, m);
    mat_agg(i,:) = mean(mat(filt,:));
    sem_agg(i,:) = sqrt(mean(sem(filt,:).^2));
end
