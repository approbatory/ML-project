function [p, stats] = BinaryChi2Gof(observedCounts, probs)
% [p, stats] = BinaryChi2Gof(observedCounts, probs)
%
% Given the N x 2 matrix of observed counts of events, returns the p
% value of the null hypothesis that the counts in each row were
% generated by the probabilities in the vector probs. N(:,1) should be
% the counts of the event occuring, and N(:,2) it not occuring.

assert(size(observedCounts,2)==2,'Observed counts must have exactly two columns.');

totalCounts = sum(observedCounts,2);
expectedCounts = bsxfun(@times, totalCounts, [probs(:) 1-probs(:)]);
if (size(observedCounts,1)==1)
  df = 2-1;
else
  df = prod(size(observedCounts)) - sum(size(observedCounts)) + 1;
end
xi= (observedCounts - expectedCounts).^2./expectedCounts;
x = sum(xi);
p = 1 - chi2cdf(x, df);

stats = struct;
stats.totalCounts = totalCounts;
stats.expectedCounts = expectedCounts;
stats.observedCounts = observedCounts;
stats.df = df;
stats.xi = xi;
stats.x = x;
stats.p = p;


